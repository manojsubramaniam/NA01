name: iOS starter workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Install the Apple certificate and provisioning profile
        env:
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # Copy the certificate and provisioning profile to the correct locations
          cp Certificates.p12 $RUNNER_TEMP/build_certificate.p12
          cp DemoTest.mobileprovision $RUNNER_TEMP/build_pp.mobileprovision

          # Import the certificate to the user keychain
          security import $RUNNER_TEMP/build_certificate.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k ~/Library/Keychains/login.keychain-db
          security list-keychain -d user -s ~/Library/Keychains/login.keychain-db

          # Apply the provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $RUNNER_TEMP/build_pp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Copy Podfile
        run: cp -r SignIn/Podfile .

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo list
          pod setup

      - name: Install dependencies
        run: pod install --project-directory=SignIn/

      - name: Check current directory
        run: |
          pwd
          ls -al

      - name: Navigate to SignIn folder
        run: |
          cd SignIn/
          ls

      - name: Update provisioning profile specifier in Xcode project
        run: |
          gem install xcodeproj
          ruby - <<EOF
          require 'xcodeproj'

          # Define the path to your Xcode project
          project_path = 'SignIn/SignIn.xcodeproj'

          # Define the target name
          target_name = 'SignIn'

          # Define the provisioning profile specifier
          provisioning_profile_specifier = "DemoTest"

          # Open the Xcode project
          project = Xcodeproj::Project.open(project_path)

          # Find the target
          target = project.targets.find { |t| t.name == target_name }

          # Update the provisioning profile settings
          target.build_configuration_list.build_configurations.each do |configuration|
            configuration.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = provisioning_profile_specifier
          end

          # Save the changes to the Xcode project file
          project.save
          EOF
          
      - name: Clear Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData
      
      - name: Archive application
        run: |
          xcodebuild -workspace SignIn/SignIn.xcworkspace \
            -scheme SignIn \
            -archivePath $RUNNER_TEMP/SignIn.xcarchive \
            -sdk iphonesimulator \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 13 Pro Max,OS=16.2' \
            clean archive \
            DEVELOPMENT_TEAM="X372X3URRM" \
            PROVISIONING_PROFILE_SPECIFIER="DemoTest" \
            -allowProvisioningUpdates


  export:
    name: Export IPA and Transfer to Remote Server
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Print Export Options Plist
        run: cat ExportOptions.plist

      - name: Decode Export Options Plist
        run: |
          EXPORT_OPTS_PATH="ExportOptions.plist"
          echo "$(cat ExportOptions.plist)" | base64 --decode > "$EXPORT_OPTS_PATH"
          echo "Export Options Plist decoded and saved to $EXPORT_OPTS_PATH"
          
      - name: Export IPA
        run: |
          xcodebuild -archivePath "$RUNNER_TEMP/SignIn.xcarchive" -exportOptionsPlist "$EXPORT_OPTS_PATH" -exportPath "$RUNNER_TEMP/IPAOutput" -exportArchive
          mkdir -p IPAOutput
          cp -R "$RUNNER_TEMP/IPAOutput/SignIn.ipa" IPAOutput/SignIn.ipa
          echo "IPA exported successfully"

      - name: Transfer IPA to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.REMOTE_SERVER_PRIVATE_KEY }}
          source: IPAOutput/SignIn.ipa
          target: /home/ubuntu/iOS/SignIn.ipa
